<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.3.RELEASE</version>
    </parent>

    <groupId>com.devops.docker</groupId>
    <artifactId>docker-devops-tutorials</artifactId>
    <version>1.0.3-RELEASE</version>

    <properties>
        <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>

        <docker.dev.Host>http://192.168.0.224:2375</docker.dev.Host>
        <docker.dev.registryUrl>http://192.168.0.224:8081/v2/</docker.dev.registryUrl>
        <docker.dev.serverId>harbor</docker.dev.serverId>
        <docker.dev.repository>192.168.0.224:8081</docker.dev.repository>
        <docker.registry.name>tax</docker.registry.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <!--开发人员 日常开发、送测-->
        <profile>
            <id>devops-dev</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/docker</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/Dockerfile</include>
                        </includes>
                        <targetPath>../docker</targetPath>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <!--开发人员日常开发，commit触发本地镜像的构建,版本为-dev-->
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}
                                    </imageName>
                                    <imageTags>
                                        <imageTag>${project.version}-dev</imageTag>
                                    </imageTags>
                                </configuration>
                            </execution>

                            <!--送测，tag最后的版本为-test-->
                            <execution>
                                <id>tag-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <image>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-dev
                                    </image>
                                    <newName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-test
                                    </newName>
                                </configuration>
                            </execution>

                            <!--送测，将test版本push到镜像库-->
                            <execution>
                                <id>push-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <serverId>${docker.dev.serverId}</serverId>
                                    <registryUrl>${docker.dev.registryUrl}</registryUrl>
                                    <imageName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-test
                                    </imageName>
                                </configuration>
                            </execution>

                        </executions>
                        <configuration>
                            <dockerHost>${docker.dev.Host}</dockerHost>
                            <dockerDirectory>target/docker</dockerDirectory>
                            <resources>
                                <rescource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </rescource>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--测试人员-测试发版-->
        <profile>
            <id>devops-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>tag-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <image>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-test
                                    </image>
                                    <newName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-prod
                                    </newName>

                                </configuration>
                            </execution>
                            <execution>
                                <id>tag-image-prod</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>
                                <configuration>
                                    <image>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-test
                                    </image>
                                    <newName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:prod-latest
                                    </newName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-prod</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <serverId>${docker.dev.serverId}</serverId>
                                    <registryUrl>${docker.dev.registryUrl}</registryUrl>
                                    <imageName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:${project.version}-prod
                                    </imageName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-prod-latest</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <serverId>${docker.dev.serverId}</serverId>
                                    <registryUrl>${docker.dev.registryUrl}</registryUrl>
                                    <imageName>
                                        ${docker.dev.repository}/${docker.registry.name}/${project.artifactId}:prod-latest
                                    </imageName>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <dockerHost>${docker.dev.Host}</dockerHost>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
